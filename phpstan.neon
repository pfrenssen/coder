parameters:
    level: 4
    paths:
        - coder_sniffer
    excludes_analyse:
        # Copied legacy code that we don't care much about.
        - 'coder_sniffer/DrupalPractice/Sniffs/CodeAnalysis/VariableAnalysisSniff.php'
        # Test files that should not be checked.
        - 'coder_sniffer/*/Test/*.tpl.php'
        - 'coder_sniffer/*/Test/*.api.php'
        - 'coder_sniffer/*/Test/*/good.php'
        - 'coder_sniffer/*/Test/*/bad.php'
        - 'coder_sniffer/*/Test/*/drupal[678]/*.php'
    autoload_files:
        - coder_sniffer/Drupal/Test/phpunit-bootstrap.php
    ignoreErrors:
        # Already fixed in PHP_CodeSniffer, remove once 3.5.4 is released.
        -
            count: 3
            message: '~^Cannot unset offset~'
            path: coder_sniffer/Drupal/Sniffs/Formatting/MultipleStatementAlignmentSniff.php
        # PHPStan does not support variable variables, see https://github.com/phpstan/phpstan/issues/2810
        -
            count: 3
            message: '~^Undefined variable: \$value[123]$~'
            path: coder_sniffer/Drupal/Sniffs/InfoFiles/ClassFilesSniff.php
        -
            count: 3
            message: '~^Undefined variable: \$value[123]$~'
            path: coder_sniffer/Drupal/Sniffs/InfoFiles/DuplicateEntrySniff.php
        -
            count: 1
            message: '~^Variable \$key might not be defined.$~'
            path: coder_sniffer/Drupal/Sniffs/InfoFiles/ClassFilesSniff.php
        -
            count: 1
            message: '~^Variable \$key might not be defined.$~'
            path: coder_sniffer/Drupal/Sniffs/InfoFiles/DuplicateEntrySniff.php
        -
            message: "#^Result of \\|\\| is always true\\.$#"
            count: 1
            path: coder_sniffer/Drupal/Sniffs/InfoFiles/ClassFilesSniff.php
        -
            message: "#^Result of \\|\\| is always true\\.$#"
            count: 1
            path: coder_sniffer/Drupal/Sniffs/InfoFiles/DuplicateEntrySniff.php
        -
            message: "#^Call to function array_key_exists\\(\\) with 0\\|string\\|null and array\\(\\) will always evaluate to false\\.$#"
            count: 1
            path: coder_sniffer/Drupal/Sniffs/InfoFiles/DuplicateEntrySniff.php
        -
            message: "#^Strict comparison using \\=\\=\\= between false and true will always evaluate to false\\.$#"
            count: 1
            path: coder_sniffer/Drupal/Sniffs/InfoFiles/DuplicateEntrySniff.php
        # We don't want to introduce abstract methods for the 2 calls because
        # the class is used in different ways where those methods are not
        # always necessary for implementors.
        -
            count: 2
            message: '~^Call to an undefined method Drupal\\Sniffs\\Semantics\\FunctionCall::(registerFunctionNames|processFunctionCall)\(\).$~'
            path: coder_sniffer/Drupal/Sniffs/Semantics/FunctionCall.php
        # False positive: Variable $a in isset() always exists and is not
        # nullable. https://github.com/phpstan/phpstan/issues/2816
        -
            count: 2
            message: '~^Variable \$fileShort in isset\(\) always exists and is not nullable.$~'
            path: coder_sniffer/Drupal/Sniffs/Commenting/DocCommentSniff.php
        -
            message: "#^Result of && is always false\\.$#"
            count: 2
            path: coder_sniffer/Drupal/Sniffs/Commenting/DocCommentSniff.php
        -
            message: "#^Else branch is unreachable because previous condition is always true\\.$#"
            count: 1
            path: coder_sniffer/Drupal/Sniffs/Commenting/FunctionCommentSniff.php
        # False positive on void return types, then a return statement is not
        # necessary. https://github.com/phpstan/phpstan/issues/2643
        - '~^Method .+\(\) should return .*(void|null).* but return statement is missing\.$~'
        - '~^Method .+\(\) should return .*null.* but empty return statement found.$~'
        # Upstream PHPCS problem where properties on Config are not set as
        # class variables. Ignore.
        -
            message: "#^Access to an undefined property PHP_CodeSniffer\\\\Config\\:\\:\\$annotations\\.$#"
            count: 1
            path: coder_sniffer/Drupal/Sniffs/WhiteSpace/ScopeIndentSniff.php
        -
            message: "#^Access to an undefined property PHP_CodeSniffer\\\\Config\\:\\:\\$.+\\.$#"
            count: 5
            path: coder_sniffer/Drupal/Test/CoderSniffUnitTest.php
        # False positive: Strict comparison using === between ... will always
        # evaluate to false. https://github.com/phpstan/phpstan/issues/2822
        - '~^Strict comparison using === between .+ and .+ will always evaluate to false\.$~'
        - "#^Result of \\|\\| is always false\\.$#"
